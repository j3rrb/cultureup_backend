datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Auth {
  id            Int    @id @default(autoincrement())
  salt          String
  hash          String
  resetToken    String
  resetTokenExp String
  userId        Int

  User User @relation(fields: [id], references: [id])

  @@index([id])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @db.VarChar(255)
  username  String   @db.VarChar(20)
  photo     String
  isActive  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Auth          Auth[]
  aditionalInfo AditionalInfo[]

  @@unique([email, username])
  @@index([id])
}

model AditionalInfo {
  id       Int    @id @default(autoincrement())
  zip      String @db.VarChar(15)
  street   String
  city     String
  country  String @default("Brazil")
  number   Int
  phone    String @db.VarChar(20)
  phoneDDI String @db.VarChar(5)
  phoneDDD String @db.VarChar(5)
  userId   Int

  User User @relation(fields: [id], references: [id])

  @@index([id])
}

model Company {
  id        Int    @id @default(autoincrement())
  companyId String
  name      String

  CompanyEmployee CompanyEmployee[]
  @@index([id])
}

model Employee {
  id         Int    @id @default(autoincrement())
  employeeId String
  firstName  String
  lastName   String
  birthday   String

  CompanyEmployee CompanyEmployee[]
  @@index([id])
}

model CompanyEmployee {
  id         Int @id @default(autoincrement())
  companyId  Int
  employeeId Int

  Company  Company  @relation(fields: [companyId], references: [id])
  Employee Employee @relation(fields: [employeeId], references: [id])
}

model Rate {
  id      Int      @id @default(autoincrement())
  message String
  type    Boolean
  time    DateTime

  @@index([id])
}
